extends dashboard-breadcrumb-layout

block breadcrumb
    li.breadcrumb-item.active(aria-current="page") #{projectName}

block projectAction
    .d-flex.flex-row.mr-4
        .border-right.mr-3.pr-3
            button#projectConfigButton.btn(type='button' data-toggle='modal' data-target='#projectConfigModal')
                i.fa.fa-cog.fa-1x.action-fbi(aria-hidden='true')
            button#changeProjectImageButton.btn(type="button" data-toggle="modal" data-target="#changeProjectImageModal")
                i.fa.fa-file-image.fa-1x.action-fbi(aria-hidden="true")

        button#cleanProjectButton.btn(type="button" data-toggle="modal" data-target="#cleanProjectModal")
            i.fa.fa-eraser.fa-1x.action-fbi(aria-hidden="true")
        button#deleteProjectButton.btn(type="button" data-toggle="modal" data-target="#deleteProjectModal")
            i.fas.fa-trash-alt.fa-1x.action-fbi(aria-hidden="true")

        #projectConfigModal.modal.fade(tabindex='-1' role='dialog' aria-labelledby='projectConfigModalLabel' aria-hidden='true')
              form(action=contextPath + '/admin/project/config/'+pid method='post')
                .modal-dialog.modal-dialog-centered(role='document')
                  .modal-content(style='background-color: #222427')
                    ul.list-group.config-list.m-2
                      li.list-group-item.config-item.d-flex.justify-content-between.flex-row
                        .font-weight-light.text-white PID
                        .font-weight-light.text-white #{pid}
                      li.list-group-item.config-item.d-flex.justify-content-between.flex-row
                        .font-weight-light.text-white API KEY
                        .font-weight-light.text-white #{apiKey}
                      li.list-group-item.config-item.d-flex.justify-content-between.flex-row
                        .font-weight-light.text-white Detect Antialiasing
                        if projectDetectAntialiasing
                          input#projectDetectAntialiasing.form-check-input(type='checkbox' name='projectDetectAntialiasing' style='position: unset' checked)
                        else
                          input#projectDetectAntialiasing.form-check-input(type='checkbox' name='projectDetectAntialiasing' style='position: unset')
                      li.list-group-item.config-item.d-flex.justify-content-between.flex-row
                        .font-weight-light.text-white.d-flex.align-items-center(for='projectColorThreshold') Color Threshold
                        select#projectColorThreshold.form-control(name='projectColorThreshold' style='max-width: max-content')
                          each val in [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]
                            if val === projectColorThreshold
                              option(selected)= val
                            else
                              option= val
                      li.list-group-item.config-item.d-flex.justify-content-between.flex-row
                        .font-weight-light.text-white Ignoring Cluster
                        if projectIgnoringCluster
                          input#projectIgnoringCluster.form-check-input(type='checkbox' name='projectIgnoringCluster' style='position: unset' checked)
                        else
                          input#projectIgnoringCluster.form-check-input(type='checkbox' name='projectIgnoringCluster' style='position: unset')
                      li.list-group-item.config-item.d-flex.justify-content-between.flex-row
                        .font-weight-light.text-white.d-flex.align-items-center(for='projectIgnoringClusterSize') Ignoring Cluster Size
                        select#projectIgnoringClusterSize.form-control(name='projectIgnoringClusterSize' style='max-width: max-content')
                          each val in [10, 30, 50, 100, 150, 200, 300, 500]
                            if val === projectIgnoringClusterSize
                              option(selected)= val
                            else
                              option= val
                    .modal-footer
                      button.btn.btn-outline-info(type='button' data-dismiss='modal') Cancel
                      button.btn.btn-outline-success(type='submit') Update

        #changeProjectImageModal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="cleanProjectModalLabel" aria-hidden="true")
            .modal-dialog.modal-dialog-centered(role="document")
                .modal-content(style="background-color: #222427")
                    form(action=contextPath + "/admin/project/image/"+pid method="post" enctype="multipart/form-data")
                        .d-flex.flex-row.pt-3.pb-3.pl-5.pr-4.align-items-center(style="min-height: 120px;")
                            .custom-file
                                input#customFile.custom-file-input(type="file" name="projectImage")
                                label.custom-file-label.font-weight-lighter(for="customFile") choose image file for your project card
                        .modal-footer
                            button.btn.btn-outline-info(type="button" data-dismiss="modal") Cancel
                            button#uploadFileButton.btn.btn-outline-success(type="submit" disabled) Upload
        #cleanProjectModal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="cleanProjectModalLabel" aria-hidden="true")
            .modal-dialog.modal-dialog-centered(role="document")
                .modal-content(style="background-color: #222427")
                    .d-flex.flex-row.pt-3.pb-3.pl-5.pr-4
                        img(src=contextPath + "/public/image/miku-wow.webp" alt="...")
                        .modal-body.d-flex.align-items-center.justify-content-center.h3.font-weight-light.text-white
                            | Clean all test Builds?
                    .modal-footer
                        button.btn.btn-outline-success(type="button" data-dismiss="modal") I&apos;m joking
                        form.mb-1(action=contextPath + "/admin/project/clean/"+pid method="post")
                            button.btn.btn-outline-danger(type="submit") Just do it
        #deleteProjectModal.modal.fade(tabindex="-1" role="dialog" aria-labelledby="deleteProjectModalLabel" aria-hidden="true")
            .modal-dialog.modal-dialog-centered(role="document")
                .modal-content(style="background-color: #222427")
                    .d-flex.flex-row.pt-3.pb-3.pl-5.pr-4
                        img(src=contextPath + "/public/image/miku-wow.webp" alt="...")
                        .modal-body.d-flex.align-items-center.justify-content-center.h3.font-weight-light.text-white
                            | Delete this Project?
                    .modal-footer
                        button.btn.btn-outline-success(type="button" data-dismiss="modal") I&apos;m joking
                        form.mb-1(action=contextPath + "/admin/project/delete/"+pid method="post")
                            button.btn.btn-outline-danger(type="submit") Just do it

block pageAction
    nav(aria-label="page-navigation")
        ul.pagination.mb-0

            if navigation.hasPrevPage
                li.page-item
                    a.page-link(href=contextPath + navigatorUrls.url_prev aria-label="Previous")
                        span(aria-hidden="true") «
                        span.sr-only Previous
            else
                li.page-item.disabled
                    a.page-link(href=contextPath + navigatorUrls.url_prev aria-label="Previous")
                        span(aria-hidden="true") «
                        span.sr-only Previous


            if navigation.page === navigators.navigator_1
                li.page-item.active
                    a.page-link(href=contextPath + navigatorUrls.url_1) #{navigators.navigator_1}
            else
                li.page-item
                    a.page-link(href=contextPath + navigatorUrls.url_1) #{navigators.navigator_1}


            if navigators.navigator_2 <= navigation.totalPages
                if navigation.page === navigators.navigator_2
                    li.page-item.active
                        a.page-link(href=contextPath + navigatorUrls.url_2) #{navigators.navigator_2}
                else
                    li.page-item
                        a.page-link(href=contextPath + navigatorUrls.url_2) #{navigators.navigator_2}



            if navigators.navigator_3 <= navigation.totalPages
                if navigation.page === navigators.navigator_3
                    li.page-item.active
                        a.page-link(href=contextPath + navigatorUrls.url_3) #{navigators.navigator_3}
                else
                    li.page-item
                        a.page-link(href=contextPath + navigatorUrls.url_3) #{navigators.navigator_3}


            if navigation.hasNextPage
                li.page-item
                    a.page-link(href=contextPath + navigatorUrls.url_next aria-label="Next")
                        span(aria-hidden="true") »
                        span.sr-only Next
            else
                li.page-item.disabled
                    a.page-link(href=contextPath + navigatorUrls.url_next aria-label="Next")
                        span(aria-hidden="true") »
                        span.sr-only Next

block main
    .container.table-container
        table.table.table-borderless
            thead.thead-dark.text-center.pb-3
                tr
                    th(scope="col") Build Number
                    th(scope="col") Build Version
                    th(scope="col") Build Datetime
                    th(scope="col") Cases Count
                    th(scope="col") Build Result
                    th(scope="col") Baseline
            tbody.text-center
                 each build in builds
                     tr
                         th(scope="row")
                             a(href=contextPath + "/build/" + build.bid) #{build.buildIndex}
                         td #{build.buildVersion}
                         td #{timeFormatter(build.createdAt)}
                         td #{build.caseCount}
                         case build.buildResult
                             when "passed"
                                 if build.casePassedByIgnoringRectanglesCount
                                    td.text-info #{build.buildResult}
                                 else
                                    td.text-success #{build.buildResult}
                             when "failed"
                                 td.text-danger #{build.buildResult}
                             default
                                td.text-info #{build.buildResult}
                         if build.isBaseline
                             td
                                 .d-flex.align-items-center.justify-content-center.icon-baseline
                                     ion-icon(name="ribbon-outline")

    script(src=contextPath + "/public/javascript/bs-custom-file-input.min.js")
    script.
        bsCustomFileInput.init()
        let btn = document.getElementById('btnResetForm')
        let form = document.querySelector('form')
        if (btn) {
            btn.addEventListener('click', function () {
                        form.reset()
            })
        }
    script.
      function setUploadButtonStats(fileInput) {
      const uploadButton = document.getElementById("uploadFileButton");
      uploadButton.disabled = fileInput.value === "";
      }

      let fileInput = document.getElementById("customFile");
      fileInput.addEventListener('input', function (evt) {
      setUploadButtonStats(this);
      });
